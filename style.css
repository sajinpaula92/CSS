



p {
    /*Day 1 session 2*/ /* This is the comment format in CSS*/
    /*font-size: 64px;*/
    /*color: purple;*/
    /*font-weight: 900;*/}

/*Day 2 session 1*/ 

/*Always use css in American English and not in anyother English. It may take the code but will not provide proper results, and at the same time it will not show the error as well and so we will have to be very cautious while typing.

One way to find the error in our code, is to always use "w3c css validator" which detects issues and helps us to correct it.*/

/*On day 2 we are going to learn more on css selectors*/

/*body{

    font-size: 22px;
    font-family: Arial, Helvetica, sans-serif;
    
    }*/
    
    /* css works with inheritance. It is nothing but css codes will apply for all the elements inside that set. say for eg. when we put font size of 22px the whole text inside the body elements will get the font size of 22 px.*/ 

    /*---Element selectors--- are the first type of css selectors. It always selects and applies the code for all the contents of that same element. check the example below of paragraph element */

    /*h2, h3 {

        color: blue;
    }*/

    /*This is group selection. we can select one ore more elements with a comma, in which we can give same values for them.*/

    /*p{

        color: purple;
    }*/

    /*---Class selectors--- are the second type of css selectors. We can use class names according to our wish but make sure it has some relation to the code we have. Class selectors always start with a period (.). Classes can be used more than once. When we use class selectors, they are more specific than a Element selector and so the rule of a class selector will be applied.*/

    /*.gray{

        color: gray;
    }*/


    /*Day 2 session 2*/ 

    /*---Id selectors--- are the third type of css selectors. We can use id names according to our wish but make sure it has some relation to the code we have. Id selectors always start with a hash symbol (#). Id names cannot be repeated in a file, it should be unique. When we use id selectors, they are more specific than a Element selector or a class selector, and so the rule of a id selector will be applied. It is not a good practice to use id's inside css.*/

    /*#second{

        font-style: italic;

    }*/

    /*.highlight{

        text-transform: uppercase;
        background-color: gold;
    }*/
    
    /*---Universal selectors--- are the selectors which selects everything in a page. it is not recommended to use universal selector. it always starts with a star symbol(*). If we use it, it always comes on the very top of the page.*/

    /* * {

    font-family: monospace;
    }*/


    /*---CSS always works in cascading style, which is from top to bottom.*/

    /*---Form elements do not always have inheritance. Say for eg. form elements like button, input, textarea, select.*/

    /*Always use specificity calcualator, which helps you to understand more on the specificity score and let you know which element or class or id will be ranked or implied.*/

    /*--END OF DAY TWO--*/

    /*Day 3 session 1*/ 

    /*On day 3 we are going to learn more on css Colors and CSS Units*/

    body{

        font-size: 22px;
        font-family: Arial, Helvetica, sans-serif;
        line-height: 1-5;
        background-color: #e7f5f2;
        color: #8b0000; /*We can use rgb values instead of using color names for eg. it would be color:rgb(0,0,0) which would be black. We havent used that but this is the ruleset.*/

        /*There is also rgba which is rgb alpha. It has only two values 0 and 1. 0 will be full transparent and 1 will be full without transparent. You can also use 50% tranparenecy by adding 0.5. check the ruleset below to know more.*/
    }

    p{

        color: #00000080;

        
    }

    /*There is also hexa decimal values. It starts from 0 and ends in F(alphabet F). For eg.. #000000 would be the color black and #FFFFFF would be the color white and #0000FF is color blue and it goes so on. We can also use this in shorthands like...#000 would be for black and #FFF would be for white and #00F would be for blue, but htis shorthand code works only if the numbers or characters are in pairs. That is why we have to remember that not all hexa codes have shorthands.*/

    /*A small note - when you type the color names, on the right side it shows the hexa decimal codes.*/

    /*We can find all the rgba, hexa decimal, hsla, hwb values in the color palete near the color names. */

    /*The next set of color values are the hsl values which is H - Hue, S- Saturation, L- lightness. There is also HSLA in which A stands for Alpha.*/

    /*There is a very important tool to select colors when you work with your project. It is a website called - COOLORS.CO. It gives all the colors availbale in the world and it also provides a contrast checker in which you can check the contrast with good scores and use it on your website. */

    /*CSS UNITS*/

    /*The very first rule about units is do not use absolute units, instead use relative units which will be more relavant and useful for the users.*/

    /*But there are places and situations where we can use absolute units say for example borders. But mostly we use relative units.*/

    /*https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units - check this page to learn more on css units.*/

    /*Another main relative unit is the rem. It adjusts the font size according to the root element. One main point to keep in mind is that it doesnt change the value according to the parent element but it only changes value according to the root element.*/

    /*REM refers to the root element but Em refers to the parent element*/

    /*There is also another two units which are vw and vh which is viewport width and viewport height.*/

    /*END OF DAY 3*/


    /*Day 4 session 1*/

    /*Today we are going to learn about CSS Box model and css Typography.*/

    h4{

        border: 2px dashed blue;
        width: 50%;
        font-size: 3rem;
        padding: 0.5em;

    }

    /*There are differnt options for margins, if we give only margin as the property, the value we give wil be the same for all the margins, but if we need to give different values for different margins, we have margin-top/margin-bottom/margin-left/margin-right. In these properties we can give different values to have different margin sizes.*/

    /*Look at this example to learn the shorthand for different margin vlaues. margin: 1.5em 2em 2em 1.5em. This is 1.5 em to the top and 2em to the right, and 2em to the bottom and 1.5em to the left. Also we can give margin: 1.5em 2em 1.5em, here it is represented as 1.5em on the top, 2 em on the right and left and 10.5em on the bottom. Also we can give like this as well, margin: 1.5em 2em, here it represents as 1.5em to the top & bottom and 2em to the right & left.*/

    /*There is another keyword called "auto" for the margin property which works with right and left but will not work for top and bottom. What it does is, it will move the element or the container to the center. The syntax is as follows, margin: 3rem auto, now this will move the container to the centre */

    /*We can use the same rules for padding as well.*/

    /*There is an outline property, which forms an outline after the border. There is also another outline property which is outline offset.*/

    .circle {

        margin: 3rem auto;/*The keyword auto shifts the container to the center.*/
        background-color: gold;
        width: 100px;
        height: 100px;
        border: 2px solid black;
        border-radius: 50px; /*This property changes a square to a round container*/
        outline: 2px solid red;
        outline-offset: 0.25rem;
    }


    /*CSS Typography*/

    /*Typography is nothing but the way the text is arranged and presented.*/

    body{

        padding: 15%;
        font-size: 1.5rem;
    }

    /* input, button {

        font: inherit; ---------- This ruleset is used to inherit the values from the parent or root element.
    }*/


    p{

        text-decoration: underline;
        text-decoration: overline;
        text-decoration: line-through;
        text-decoration: none;

    }

    /*Day 4 session 2*/

    /*The text decoration with the value of none will also remove the hypertext aswell. Normally hypertext will be underlined but when we use text decoration as none it will remove the underline from the hypertext as well.*/

    /*The next text decoration we are going to see is the text transformation*/

    p{

        text-transform: lowercase;
        /*text-transform: uppercase;*/

    }

    /*The next text decoration we are going to see is the text align*/

    p{

        text-align: left; /*Here you can see that the text aligned to the left side properly but the right side is improper. This is the default setting.*/
        /*text-align: justify;*/ /*Here you can see that the text in the left and right are aligned properly. Both left and right are aligned correctly.*/
        /*text-align: right; */  /*Here you can see that the text aligned to the right side properly but the left side is improper. And the line starts from the right.*/

    }

    /*The next text decoration we are going to see is the text indent*/

    p{

        text-indent: 2em;
               
        
        /*With this ruleset you can see that all the paragraphs starts with a space in the front. It depends on the value we give. If we give a bigger number, it starts with a bigger space in the front.*/

        /*The more typography things you can learn from mdn or when you type text in css you will get more values, give a try on all those and you can learn gradually.*/

    }

    p{

        text-shadow: 10px 10px 10px red; /*This sets more shadow behind the text.*/

    }

    /*The next property we are going to see is the line height*/

    p{

        line-height: 1.5; /*This increases the space in between the lines.*/
        letter-spacing: 0.2em; /*This increases the space in between the letters. This is not used too often.*/
        word-spacing: 1.5em; /*This increases the space in between the words. This is not used too often.*/
    }


    /*The next we are going to look at some font properties*/

    p{

        font-weight: 700;
        font-style: italic; /*We also have oblique which is a stronger italic.*/
        font-family: cursive; /*Some important font families are serif, sans-serif, monospace, cursive, fantasy. These are the generic families. The rulest will always have three families in our property value. It is because if the first font family is not available in your computer, it will take the second font family and even the second font family is not available in your computer it will take the third font family.*/


    }

    /*END OF DAY 4*/




















